(()=>{"use strict";var e={145:function(e,s,t){var o=t("618");t("876"),t("286");var l=t("19"),r=t("499"),i=l.XKW(`<div class="hero svelte-iopek6"><h1 class="svelte-iopek6"> </h1> <p class="subtitle svelte-iopek6">A Modern Framework for Building Fast, SEO-Friendly Web Applications</p> <div class="cta-buttons svelte-iopek6"><a href="doc" class="cta-button primary svelte-iopek6">View Documentation</a> <a href="example" class="cta-button secondary svelte-iopek6">Try Bitcoin Demo</a> <div class="server-side-indicator svelte-iopek6">(these links are client-side routed links)</div></div> <div class="features svelte-iopek6"><div class="feature svelte-iopek6"><h3 class="svelte-iopek6">‚ö°Ô∏è Lightning Fast</h3> <p class="svelte-iopek6">Pre-rendered pages with hydration for optimal performance</p></div> <div class="feature svelte-iopek6"><h3 class="svelte-iopek6">üìà Real-time Data</h3> <p class="svelte-iopek6">Seamless integration with external APIs and live updates</p></div> <div class="feature svelte-iopek6"><h3 class="svelte-iopek6">üîÑ SSPR Support</h3> <p class="svelte-iopek6">Server-Side Pre-Rendering for better SEO</p></div></div></div>`);function c(e){let s=l.jqu("Welcome to PrevelteKit");window?.JSDOM&&l.t8m(s,"Server-Side Pre-Rendered with PrevelteKit, you see this in the source code, but not in the DOM after loading");var t=i(),o=l.iUc(t),c=l.iUc(o,!0);l.mcB(o);var a=l.J9n(o,4),n=l.iUc(a);l.aDg(n,e=>r.BC?.(e));var v=l.J9n(n,2);l.aDg(v,e=>r.BC?.(e)),l.lpx(2),l.mcB(a),l.lpx(2),l.mcB(t),l.OwZ(()=>l.u7_(c,l.U2M(s))),l.R3I(e,t)}var a=l.XKW(`<div class="docs svelte-2orxox"><header class="svelte-2orxox"><h1 class="svelte-2orxox">PrevelteKit Documentation</h1> <p class="render-info svelte-2orxox"> </p></header> <section class="svelte-2orxox"><h2 class="svelte-2orxox">Getting Started</h2> <div class="code-block svelte-2orxox"><pre class="svelte-2orxox"><code class="svelte-2orxox">git clone https://github.com/tbocek/preveltekit.git
cd preveltekit
pnpm install
pnpm dev    # Development mode
pnpm build  # Production build</code></pre></div></section> <section class="svelte-2orxox"><h2 class="svelte-2orxox">Core Features</h2> <h3 class="svelte-2orxox">üì¶ Server-Side Pre-Rendering (SSPR)</h3> <p class="svelte-2orxox">Unlike traditional SSR or SSG, SSPR pre-renders your app at build time while maintaining full interactivity through hydration.
            This gives you the best of both worlds: fast initial loads and dynamic functionality.</p> <h3 class="svelte-2orxox">‚ö° Build System</h3> <p class="svelte-2orxox">Built on Rsbuild for lightning-fast builds. The system automatically handles:</p> <ul class="svelte-2orxox"><li class="svelte-2orxox">TypeScript compilation and type checking</li> <li class="svelte-2orxox">Asset optimization and bundling</li> <li class="svelte-2orxox">CSS processing and minification</li> <li class="svelte-2orxox">Production optimizations like code splitting</li></ul> <h3 class="svelte-2orxox">üîÑ Development Workflow</h3> <p class="svelte-2orxox">Three modes available to suit your needs:</p> <ul class="svelte-2orxox"><li class="svelte-2orxox"><strong class="svelte-2orxox">Development (pnpm dev)</strong>: Express server with fast rebuilds and hot module replacement</li> <li class="svelte-2orxox"><strong class="svelte-2orxox">Staging (pnpm stage)</strong>: Production build with local preview server</li> <li class="svelte-2orxox"><strong class="svelte-2orxox">Production (pnpm build)</strong>: Optimized build with pre-compression (Brotli, Gzip, Zstandard)</li></ul></section> <section class="svelte-2orxox"><h2 class="svelte-2orxox">SSPR Development</h2> <h3 class="svelte-2orxox">üîç Detecting Server Pre-Rendering</h3> <p class="svelte-2orxox">PrevelteKit uses <code class="svelte-2orxox">window.JSDOM</code> to indicate when code is running during server pre-rendering.
            This is crucial for handling client-side-only code like API calls and intervals.</p> <div class="code-block svelte-2orxox"><pre class="svelte-2orxox"><code class="svelte-2orxox"></code></pre></div> <h3 class="svelte-2orxox">üîÑ Handling Client-Side Operations</h3> <p class="svelte-2orxox">When working with APIs, timers, or browser-specific features, wrap them in a JSDOM check to prevent execution during pre-rendering:</p> <div class="code-block svelte-2orxox"><pre class="svelte-2orxox"><code class="svelte-2orxox"></code></pre></div> <p class="svelte-2orxox"><strong class="svelte-2orxox">Common use cases for JSDOM checks:</strong></p> <ul class="svelte-2orxox"><li class="svelte-2orxox">API calls and data fetching</li> <li class="svelte-2orxox">Browser APIs (localStorage, sessionStorage)</li> <li class="svelte-2orxox">Timers and intervals</li> <li class="svelte-2orxox">DOM manipulation</li> <li class="svelte-2orxox">Browser-specific features (geolocation, notifications)</li></ul></section> <section class="svelte-2orxox"><h2 class="svelte-2orxox">Static Site Configuration</h2> <p class="svelte-2orxox">To add static routes to your application, configure them in <code class="svelte-2orxox">rsbuild.config.ts</code>.
            Each route needs an entry in the configuration. For example, to add routes for <code class="svelte-2orxox">/doc</code> and <code class="svelte-2orxox">/example</code>:</p> <div class="code-block svelte-2orxox"><pre class="svelte-2orxox"><code class="svelte-2orxox"></code></pre></div> <p class="svelte-2orxox"><strong class="svelte-2orxox">Important Notes:</strong></p> <ul class="svelte-2orxox"><li class="svelte-2orxox">Each entry key becomes a URL path in your application</li> <li class="svelte-2orxox">Subdirectories are not currently supported</li> <li class="svelte-2orxox">All entries point to the same <code class="svelte-2orxox">index.ts</code> file</li> <li class="svelte-2orxox">The router in your application will handle the actual component rendering</li></ul></section> <section class="svelte-2orxox"><h2 class="svelte-2orxox">Docker Support</h2> <p class="svelte-2orxox">Development environment:</p> <div class="code-block svelte-2orxox"><pre class="svelte-2orxox"><code class="svelte-2orxox">docker build -f Dockerfile.dev . -t preveltekit-dev
docker run -p3000:3000 -v./src:/app/src -v./public:/app/public preveltekit-dev</code></pre></div> <p class="svelte-2orxox">Production build:</p> <div class="code-block svelte-2orxox"><pre class="svelte-2orxox"><code class="svelte-2orxox">docker build . -t preveltekit
docker run -p3000:3000 preveltekit</code></pre></div></section> <section class="svelte-2orxox"><h2 class="svelte-2orxox">Project Structure</h2> <ul class="svelte-2orxox"><li class="svelte-2orxox"><strong class="svelte-2orxox">/src</strong>: Application source code</li> <li class="svelte-2orxox"><strong class="svelte-2orxox">/public</strong>: Static assets</li> <li class="svelte-2orxox"><strong class="svelte-2orxox">/dist</strong>: Production build output</li> <li class="svelte-2orxox"><strong class="svelte-2orxox">rsbuild.config.ts</strong>: Build configuration</li> <li class="svelte-2orxox"><strong class="svelte-2orxox">ssr.mjs</strong>: SSPR implementation</li></ul></section> <section class="svelte-2orxox"><h2 class="svelte-2orxox">Deployment</h2> <p class="svelte-2orxox">The production build generates static files with pre-compressed variants:</p> <ul class="svelte-2orxox"><li class="svelte-2orxox">Standard files (.js, .css, .html)</li> <li class="svelte-2orxox">Brotli compressed (.br)</li> <li class="svelte-2orxox">Gzip compressed (.gz)</li> <li class="svelte-2orxox">Zstandard compressed (.zst)</li></ul> <p class="svelte-2orxox">Deploy to any static hosting or web server that supports serving compressed assets.</p></section></div>`);function n(e){let s=l.jqu("Client Rendered");window?.JSDOM&&l.t8m(s,"Server Pre-Rendered");var t=a(),o=l.iUc(t),r=l.J9n(l.iUc(o),2),i=l.iUc(r);l.mcB(r),l.mcB(o);var c=l.J9n(o,6),n=l.J9n(l.iUc(c),6),v=l.iUc(n);l.iUc(v).textContent=`// Basic detection
let renderInfo = "Client Rendered";
if (window?.JSDOM) {
    renderInfo = "Server Pre-Rendered";
}`,l.mcB(v),l.mcB(n);var d=l.J9n(n,6),p=l.iUc(d);l.iUc(p).textContent=`$effect(() => {
    if (!window?.JSDOM) {
        fetchBitcoinPrice();
        // Set up refresh interval
        const interval = setInterval(fetchBitcoinPrice, 60000);
        return () => clearInterval(interval);
    }
});`,l.mcB(p),l.mcB(d),l.lpx(4),l.mcB(c);var x=l.J9n(c,2),u=l.J9n(l.iUc(x),4),m=l.iUc(u);l.iUc(m).textContent=`export default defineConfig({
    environments: {
        web: {
            plugins: [
                pluginSvelte(),
                pluginCssMinimizer()
            ],
            source: {
                entry: {
                    // Each entry corresponds to a static route
                    index: './src/index.ts',    // https://example.com/
                    doc: './src/index.ts',      // https://example.com/doc
                    example: './src/index.ts',  // https://example.com/example
                }
            },
            output: {
                target: 'web',
                minify: process.env.NODE_ENV === 'production',
            }
        }
    }
});`,l.mcB(m),l.mcB(u),l.lpx(4),l.mcB(x),l.lpx(6),l.mcB(t),l.OwZ(()=>l.u7_(i,`(${l.U2M(s)??""})`)),l.R3I(e,t)}var v=l.XKW('<div class="loading svelte-1ae65j3">Loading Bitcoin prices...</div>'),d=l.XKW('<div class="error svelte-1ae65j3"> <button class="svelte-1ae65j3">Retry</button></div>'),p=l.XKW('<div class="price-card svelte-1ae65j3"><div class="price-header svelte-1ae65j3"><span class="currency-code svelte-1ae65j3"> </span> <span class="update-time svelte-1ae65j3"> </span></div> <div class="current-price svelte-1ae65j3"><!> </div> <div class="price-description svelte-1ae65j3"> </div></div> <div class="disclaimer svelte-1ae65j3"> </div>',1),x=l.XKW('<div class="bitcoin-dashboard svelte-1ae65j3"><div class="header svelte-1ae65j3"><h2 class="svelte-1ae65j3">Bitcoin Price Tracker</h2> <p class="render-info svelte-1ae65j3"> </p></div> <div class="currency-selector svelte-1ae65j3"><label for="currency">Select Currency:</label> <select id="currency" class="select-input svelte-1ae65j3"><option>USD</option><option>EUR</option><option>GBP</option></select></div> <div class="price-display svelte-1ae65j3"><!></div></div>');function u(e,s){l.VFu(s,!0);let t=l.SBE(null),o=l.SBE(!0),r=l.SBE(null),i=l.SBE("USD"),c=l.SBE("Client Rendered");async function a(){try{l.t8m(o,!0),l.t8m(r,null);let e=await fetch("https://api.coindesk.com/v1/bpi/currentprice.json");if(!e.ok)throw Error("Failed to fetch data");l.t8m(t,l.sjz(await e.json()))}catch(e){l.t8m(r,l.sjz(e instanceof Error?e.message:"An error occurred"))}finally{l.t8m(o,!1)}}window?.JSDOM&&l.t8m(c,"Server Pre-Rendered"),l.JcM(()=>{if(!window?.JSDOM){a();let e=setInterval(a,6e4);return()=>clearInterval(e)}});var n=x(),u=l.iUc(n),m=l.J9n(l.iUc(u),2),h=l.iUc(m);l.mcB(m),l.mcB(u);var f=l.J9n(u,2),g=l.J9n(l.iUc(f),2),S=l.iUc(g);S.value=(S.__value="USD","USD");var b=l.J9n(S);b.value=(b.__value="EUR","EUR");var k=l.J9n(b);k.value=(k.__value="GBP","GBP"),l.mcB(g),l.mcB(f);var U=l.J9n(f,2),B=l.iUc(U),w=e=>{var s=v();l.R3I(e,s)},y=e=>{var s=l.UI8(),o=l.VHm(s),c=e=>{var s=d(),t=l.iUc(s);l.J9n(t).__click=a,l.mcB(s),l.OwZ(()=>l.u7_(t,`Error: ${l.U2M(r)??""} `)),l.R3I(e,s)},n=e=>{var s=l.UI8(),o=l.VHm(s),r=e=>{var s=p(),o=l.VHm(s),r=l.iUc(o),c=l.iUc(r),a=l.iUc(c,!0);l.mcB(c);var n=l.J9n(c,2),v=l.iUc(n);l.mcB(n),l.mcB(r);var d=l.J9n(r,2),x=l.iUc(d);l.dyc(x,()=>l.U2M(t).bpi[l.U2M(i)].symbol,!1,!1);var u=l.J9n(x);l.mcB(d);var m=l.J9n(d,2),h=l.iUc(m,!0);l.mcB(m),l.mcB(o);var f=l.J9n(o,2),g=l.iUc(f,!0);l.mcB(f),l.OwZ(()=>{l.u7_(a,l.U2M(i)),l.u7_(v,`Last Updated: ${l.U2M(t).time.updated??""}`),l.u7_(u,` ${l.U2M(t).bpi[l.U2M(i)].rate??""}`),l.u7_(h,l.U2M(t).bpi[l.U2M(i)].description),l.u7_(g,l.U2M(t).disclaimer)}),l.R3I(e,s)};l.if(o,e=>{l.U2M(t)&&e(r)},!0),l.R3I(e,s)};l.if(o,e=>{l.U2M(r)?e(c):e(n,!1)},!0),l.R3I(e,s)};l.if(B,e=>{l.U2M(o)&&!l.U2M(t)?e(w):e(y,!1)}),l.mcB(U),l.mcB(n),l.OwZ(()=>l.u7_(h,`(${l.U2M(c)??""})`)),l.Gox(g,()=>l.U2M(i),e=>l.t8m(i,e)),l.R3I(e,n),l.Swx()}l.clJ(["click"]);var m=l.XKW(`<div class="app svelte-r00r93"><nav class="svelte-r00r93"><div class="nav-content svelte-r00r93"><div class="nav-items svelte-r00r93"><span class="logo svelte-r00r93">PrevelteKit</span> <div class="nav-links svelte-r00r93"><a href="./" class="svelte-r00r93">Home</a> <a href="./doc" class="svelte-r00r93">Documentation</a> <a href="./example" class="svelte-r00r93">Example</a> <div class="server-side-indicator svelte-r00r93">(these links are server-side routed links)</div></div></div></div></nav> <main class="svelte-r00r93"><div class="content svelte-r00r93"><!></div></main> <footer class="svelte-r00r93"><div class="footer-content svelte-r00r93"><p><span class="highlight">PrevelteKit</span> ‚Ä¢ Lightning fast builds ‚Ä¢ Pre-rendered SPA ‚Ä¢ Pure HTML/CSS/JS output</p></div></footer></div>`);(0,o.ZB)(function(e){let s=[{path:"(.*?)/doc",component:n},{path:"(.*?)/example",component:u},{path:"(.*?)/",component:c}];var t=m(),o=l.J9n(l.iUc(t),2),i=l.iUc(o),a=l.iUc(i);(0,r.F0)(a,{routes:s}),l.mcB(i),l.mcB(o),l.lpx(2),l.mcB(t),l.R3I(e,t)},{target:document.getElementById("root"),props:{}})}},s={};function t(o){var l=s[o];if(void 0!==l)return l.exports;var r=s[o]={exports:{}};return e[o](r,r.exports,t),r.exports}t.m=e,t.d=function(e,s){for(var o in s)t.o(s,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:s[o]})},t.o=function(e,s){return Object.prototype.hasOwnProperty.call(e,s)},(()=>{var e=[];t.O=function(s,o,l,r){if(o){r=r||0;for(var i=e.length;i>0&&e[i-1][2]>r;i--)e[i]=e[i-1];e[i]=[o,l,r];return}for(var c=1/0,i=0;i<e.length;i++){for(var o=e[i][0],l=e[i][1],r=e[i][2],a=!0,n=0;n<o.length;n++)(!1&r||c>=r)&&Object.keys(t.O).every(function(e){return t.O[e](o[n])})?o.splice(n--,1):(a=!1,r<c&&(c=r));if(a){e.splice(i--,1);var v=l();void 0!==v&&(s=v)}}return s}})(),t.rv=function(){return"1.1.8"},(()=>{var e={403:0};t.O.j=function(s){return 0===e[s]};var s=function(s,o){var l=o[0],r=o[1],i=o[2],c,a,n=0;if(l.some(function(s){return 0!==e[s]})){for(c in r)t.o(r,c)&&(t.m[c]=r[c]);if(i)var v=i(t)}for(s&&s(o);n<l.length;n++)a=l[n],t.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return t.O(v)},o=self.webpackChunkpreveltekit=self.webpackChunkpreveltekit||[];o.forEach(s.bind(null,0)),o.push=s.bind(null,o.push.bind(o))})(),t.ruid="bundler=rspack@1.1.8";var o=t.O(void 0,["586"],function(){return t("145")});o=t.O(o)})();